{"version":3,"sources":["webpack:///./app/scss/partials/global/app/scss/partials/global/_global.scss","webpack:///./app/scss/partials/global/app/scss/includes/_tools.scss","webpack:///./app/scss/partials/global/app/scss/includes/_colors.scss","webpack:///./app/scss/partials/header/app/scss/partials/header/_header.scss","webpack:///./app/scss/partials/header/app/scss/includes/_tools.scss","webpack:///./app/scss/partials/header/app/scss/includes/_colors.scss","webpack:///./app/scss/partials/hero/app/scss/partials/hero/_hero.scss","webpack:///./app/scss/partials/hero/app/scss/includes/_tools.scss","webpack:///./app/scss/partials/page/app/scss/partials/page/_page.scss","webpack:///./app/scss/partials/footer/app/scss/partials/footer/_footer.scss","webpack:///./app/scss/partials/footer/app/scss/includes/_colors.scss","webpack:///./app/scss/partials/footer/app/scss/includes/_tools.scss","webpack:///./app/scss/partials/components/button/app/scss/partials/components/button/_button.scss","webpack:///./app/scss/partials/components/button/app/scss/includes/_tools.scss","webpack:///./app/scss/partials/components/pod/app/scss/partials/components/pod/_pod.scss","webpack:///./app/scss/partials/components/pod/app/scss/includes/_tools.scss","webpack:///./app/scss/partials/components/pod/app/scss/includes/_colors.scss","webpack:///./app/scss/partials/components/cta/app/scss/partials/components/cta/_cta.scss"],"names":[],"mappings":"AAEA,KAEE,8CCuGA,cAAW,CDzGb,UEuBM,aAhBQ,CFPd,eEyBQ,YAlBM,CFPd,YE6BQ,aAtBM,CFPd,YEuBM,aAjBU,CFNhB,iBEyBQ,YAnBQ,CFNhB,cE6BQ,aAvBQ,CFNhB,YEuBM,aAbU,CFVhB,iBEyBQ,YAfQ,CFVhB,cE6BQ,aAnBQ,CAoBT,oCF9BP,KC2GI,mBA7D6C,CDzChD,CCsFC,qCD3FF,KC8GI,cAAW,CDzGd,CAED,KACE,oDAAa,CACd,IAGC,eACA,WAAY,CGbd,OACE,eACA,kEACA,6EACA,wGAAsB,CAIvB,oCARD,OAMI,oGAAmB,CAEtB,CAGC,cACE,6EC6FF,kBAAW,CD3FV,oCAHD,cCgGE,kBA7D6C,CDhC9C,CC6ED,qCDhFA,cCmGE,gBAAW,CDhGZ,CAID,cC8II,gCAlH2C,CDvB5C,oCALH,cCiKM,yBArIyC,CDvB5C,CCoEH,qCDzEA,cCoKM,gBAtKgB,CDOnB,CCwDH,oCD7DA,cC0JM,eA9HyC,CDvB5C,CCoEH,qCDzEA,cC6JM,UA/JgB,CDOnB,CAEH,aACE,mBACA,gBAAiB,CACjB,qBACE,oBEvBU,CFsBZ,2BAGI,WACA,wBE1BQ,CF2BT,aAIH,mBACA,gBAAiB,CACjB,qBACE,qBACA,yBACA,UE5CM,CCIV,eACE,WACA,wBACA,4BACA,sBACA,WACA,+DAAyB,CAE1B,YAEC,SAAU,CADZ,mBC8FA,kBAAW,CDzFR,oCALH,mBCgGE,mBA7D6C,CD9B5C,CC2EH,qCDhFA,mBCmGE,kBAAW,CD9FV,CEZL,EACE,oBAAqB,CACtB,GAGC,gBACA,aAAc,CACf,MAGC,YAAa,CACd,EAGC,QAAS,CACV,MAGC,eAAgB,CACjB,OAKC,WACA,CAKD,iBALC,yBACA,gBACA,mBACA,eACA,iBAAkB,CASnB,uBAIG,cAAe,CAFnB,WAKI,qBACA,aAAc,CACf,OAID,cACA,eAAgB,CAFlB,uBAII,kBACA,QACA,cACA,gBAAiB,CAClB,YAID,4BACA,aACA,aAAc,CAHhB,gBAKI,SAAU,CALd,oBAOM,UAAW,CAPjB,kBAWI,eAAgB,CACjB,GAID,SAAU,CADZ,MAGI,eAAgB,CACjB,GAID,cAAe,CAChB,GAGC,aAAc,CC5FhB,QACE,WACA,qEACA,6EACA,yGACA,wBCEY,CDMb,oCAbD,QAOI,oGAAmB,CAMtB,CAbD,UAWI,UCbQ,CDcT,cAKC,6EACA,yBEmHE,iBAvF2C,CFd9C,qCAhBD,cEyHQ,YAzHc,CFgBrB,CE+CD,oCF/DA,cAKI,SAAU,CAWb,CATC,oBEkFF,kBAAW,CFhFR,oCAFD,oBEoFA,kBA7D6C,CFrB5C,CEkEH,qCFpEE,oBEuFA,gBAAW,CFrFV,CACD,qBEoHE,mBATA,QFxG4B,CAC3B,qCAJH,qBEwHM,eATA,QAzHc,CFcjB,CE6DL,mBA0CI,iBAvF2C,CFX9C,qCAFD,mBEwGQ,YAzHc,CFmBrB,CGpCH,KACE,yBACA,YACA,gBACA,WACA,YAAa,CALf,OAQI,gBACA,mBAAoB,CATxB,aAWM,aAAc,CAXpB,UAeI,mEACA,sBC0LE,gCA3J2C,CD5B9C,oCAnBH,UC4MQ,eA7JyC,CD5B9C,CCyED,qCD5FF,UC+MQ,UA9LgB,CDErB,CC6DD,oCDhFF,UC4MQ,gBA7JyC,CD5B9C,CCyED,qCD5FF,UC+MQ,WA9LgB,CDErB,aEjBD,gBACE,oDAAa,CAFjB,gBAQM,cAAe,CARrB,cAWM,cAAe,CAXrB,YCyGE,mBDzFE,iBACA,kBAAmB,CACpB,oCAlBH,YC2GI,mBA7D6C,CD5B9C,CCyED,qCD3FF,YC8GI,kBAAW,CD5FZ,CAlBH,aAqBI,cAAe,CArBnB,WAyBI,gBAAiB,CAElB,MAMC,4BEhCY,CCHhB,MAEI,qDACA,kEACA,gEACA,qBACA,aAAc,CANlB,YASM,wBAAyB,CAT/B,QAaM,kBACA,iBAAkB","file":"css/app.css","sourcesContent":["@import \"../../includes/includes\";\n\nbody {\n  @include page-colors();\n  font-family: \"Avenir\",Helvetica,Arial,sans-serif;\n  @include font-sizer($base-font);\n\n}\n\n.row {\n  display: flex;\n}\n\nimg {\n  max-width: 100%;\n  height: auto;\n}\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/global/app/scss/partials/global/_global.scss","$base_item_class: item;\n$base_tile_class: tile;\n$base-font: 16;\n$base-color: #666;\n$break_point: 768;\n$confine-width: ($break_point * 2);\n$overlay-max-width: 1300;\n$break_point-medium: ($break_point * 1.5);\n$break_point-xs: ($break_point * .6);\n$nav-height-large: 120;\n$nav-height-small: 80;\n\n\n// adds px to number string\n@function px($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels + px;\n  }\n}\n\n// figures rem v base font size (default is 16)\n@function rem-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + rem;\n  }\n}\n\n// figures em v base font size (default is 16)\n@function em-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + em;\n  }\n}\n\n// figures %/vw/vh v desired media width\n// usage --  font-size: size-calc(18,'vw',$tablet);\n@function size-calc($pixels, $unit, $container-size) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else if $unit == '%' {\n    @return (($pixels / $container-size) * 100%);\n  } @else if $unit == 'vw' {\n    @return (($pixels / $container-size) * 100vw);\n  } @else if $unit == 'vh' {\n    @return (($pixels / $container-size) * 100vh);\n  }\n}\n\n// Breakpoint and Media Mixins\n\n@mixin x-small {\n  @media screen and (max-width: #{$break_point-xs+0px}) {\n    @content;\n  }\n}\n\n@mixin small {\n  @media screen and (max-width: #{$break_point+0px}) {\n    @content;\n  }\n}\n\n@mixin landscape {\n  @media screen and (max-width: #{$break_point+0px}) and (orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin medium {\n  @media screen and (min-width: #{$break_point+1px}) and (max-width: #{$break_point-medium+0px}) {\n    @content;\n  }\n}\n\n@mixin large {\n  @media screen and (min-width: #{$break_point+1px}) {\n    @content;\n  }\n}\n\n@mixin x-large {\n  @media screen and (min-width: #{$confine-width+0px}) {\n    @content;\n  }\n}\n\n@mixin confine-width {\n  @media screen and (min-width: #{$confine-width+1px}) {\n    @content;\n  }\n}\n\n@mixin overlay-max {\n  @media screen and (min-width: #{$overlay-max-width+0px}) {\n    @content;\n  }\n}\n\n// Functional Mixins\n\n@mixin font-sizer($size: $base-font,$size2: $size,$size3: $size2) {\n  font-size: #{($size/$base-font)+rem};\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin font-vw($size: $base-font,$size2: $size,$size3: $size2) {\n  @if ($size2 == $size) {\n    $size: $size * 2;\n  }\n\n  font-size: size-calc($size, 'vw', $break_point);\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin vw-calc($prop, $size: null, $size2: null, $size3: null, $size4: null, $size5: null, $size6: null,  $size7: null, $size8: null) {\n  @if ($prop == padding) or ($prop == margin) {\n    @if $size == null {\n      #{$prop}: 0;\n    } @else if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2});\n        }\n      }\n\n    } @else if ($size2 != null) and ($size3 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2});\n        }\n      }\n\n    } @else if ($size3 != null) and ($size4 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2});\n        }\n      }\n\n    } @else if ($size4 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point) size-calc($size4, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2}) px(#{$size4 * 2});\n        }\n      }\n\n    }\n\n    @if ($size5 != null) and ($size6 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5});\n      }\n    } @else if ($size6 != null) and ($size7 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6});\n      }\n    } @else if ($size7 != null) and ($size8 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7});\n      }\n    } @else if ($size8 != null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width) size-calc($size8, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7}) px(#{$size8});\n      }\n    }\n  } @else {\n    @if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size);\n      }\n    } @else if ($size2 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size2, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size2);\n      }\n    }\n  }\n}\n\n@mixin embed-resize($width: 560,$height: 340,$haspadding: true) {\n  $ratio: ($height / $width);\n  $max-width: size-calc($break_point, 'vw', $break_point);\n\n  @if ($haspadding == true) {\n    $max-width: ($max-width - size-calc(80,'vw',$break_point));\n  }\n\n  @include small {\n    max-width: $max-width;\n    max-height: ($max-width * $ratio);\n  }\n}\n\n@mixin item-count($count) {\n  &:first-child:nth-last-child(#{$count}),\n  &:first-child:nth-last-child(#{$count}) ~ & {\n    @content;\n  }\n}\n\n@mixin calc-it($prop,$first:null,$second:null,$third:null,$forth:null) {\n  @if $first == null {\n    #{$prop}: 0;\n  } @else if ($first != null and $second == null) or ($first != null and $second == $first and $third == null and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == $first ) {\n    #{$prop}: em-calc($first);\n  } @else if ($second != null and $second != $first and $third == null) or ($second != null and $second != $first and $third == $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second);\n  } @else if ($third != null and $third != $first and $forth == null) or ($third != null and $third != $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third);\n  } @else if ($forth != null and $third != $first and $forth != $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third) em-calc($forth);\n  }\n}\n\n@mixin confined {\n  @include confine-width {\n    max-width: px($confine-width);\n    margin: 0 auto;\n    position: relative;\n    @content;\n  }\n}\n\n@mixin widify($first: 1,$second: $first) {\n  width: calc((100% / #{$second}) * #{$first});\n}\n\n@mixin display-switch {\n  &.show {\n    &-large {\n\n      display: none;\n      @include large {\n        display: block;\n      }\n    }\n    &-small {\n      display: block;\n      @include large {\n        display: none;\n      }\n    }\n  }\n}\n\n%nav-height-large-full {\n  @include large {\n    height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-full-min {\n  @include large {\n    min-height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-half {\n  @include large {\n    height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-large-half-min {\n  @include large {\n    min-height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-small-full {\n  @include small {\n    height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      height: calc(100vh);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-full-min {\n  @include small {\n    min-height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      min-height: calc(100vh);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n%nav-height-small-half {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-half-min {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      min-height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n@mixin view-height($screensize, $fullhalf, $min:null) {\n  @if $min != null {\n    $min: -min;\n  }\n  @extend %nav-height-#{$screensize}-#{$fullhalf}#{$min};\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/global/app/scss/includes/_tools.scss","$white: #FFF;\n$off-white: #F6F6F6;\n$gray-1: #E8E8E8;\n$gray-2: #BBBCBC;\n$gray-3: #808285;\n$gray-4: #58595B;\n$black: #000;\n\n$purple: #500778;\n$teal: #008AAB;\n$teal-light: #009dbb;\n$blue-green: #6BCABA;\n$orange: #FFAD00;\n$green: #78D64B;\n$background: #ee7822;\n\n$page-colors: ('teal', $teal, 60%), ('purple', $purple, 60%), ('orange', $orange, 40%);\n\n\n@mixin page-colors() {\n  @each $i in $page-colors {\n    $hex: nth($i,2);\n    $percent: nth($i,3);\n    &.#{nth($i,1)} {\n      // background: lighten($hex, $percent);\n      color: nth($i,2);\n      .st0 {\n        fill: nth($i,2);\n      }\n\n      a {\n        color: nth($i,2);\n      }\n      @content\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/global/app/scss/includes/_colors.scss","@import \"../../includes/includes\";\n\nheader {\n  padding: 15px 0;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n  @include large {\n    flex-direction: row;\n  }\n}\n\n.header {\n  &__menu {\n    justify-content: space-between;\n    @include font-sizer(18,24);\n  }\n}\n\n.menu {\n  &__item {\n    a {\n      @include vw-calc(padding, 5, 5, 5, 5, 5, 10);\n      @include vw-calc(margin, 5, 5, 5, 5, 5);\n\n    }\n  }\n  &__quote {\n    border-style: solid;\n    border-width: 1px;\n    .purple & {\n      border-color: $purple;\n      &:hover {\n        color: $white;\n        background-color: $purple;\n      }\n    }\n  }\n  &__login {\n    border-style: solid;\n    border-width: 1px;\n    .purple & {\n      border-color: $purple;\n      background-color: $purple;\n      color: $white;\n\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/header/app/scss/partials/header/_header.scss","$base_item_class: item;\n$base_tile_class: tile;\n$base-font: 16;\n$base-color: #666;\n$break_point: 768;\n$confine-width: ($break_point * 2);\n$overlay-max-width: 1300;\n$break_point-medium: ($break_point * 1.5);\n$break_point-xs: ($break_point * .6);\n$nav-height-large: 120;\n$nav-height-small: 80;\n\n\n// adds px to number string\n@function px($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels + px;\n  }\n}\n\n// figures rem v base font size (default is 16)\n@function rem-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + rem;\n  }\n}\n\n// figures em v base font size (default is 16)\n@function em-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + em;\n  }\n}\n\n// figures %/vw/vh v desired media width\n// usage --  font-size: size-calc(18,'vw',$tablet);\n@function size-calc($pixels, $unit, $container-size) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else if $unit == '%' {\n    @return (($pixels / $container-size) * 100%);\n  } @else if $unit == 'vw' {\n    @return (($pixels / $container-size) * 100vw);\n  } @else if $unit == 'vh' {\n    @return (($pixels / $container-size) * 100vh);\n  }\n}\n\n// Breakpoint and Media Mixins\n\n@mixin x-small {\n  @media screen and (max-width: #{$break_point-xs+0px}) {\n    @content;\n  }\n}\n\n@mixin small {\n  @media screen and (max-width: #{$break_point+0px}) {\n    @content;\n  }\n}\n\n@mixin landscape {\n  @media screen and (max-width: #{$break_point+0px}) and (orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin medium {\n  @media screen and (min-width: #{$break_point+1px}) and (max-width: #{$break_point-medium+0px}) {\n    @content;\n  }\n}\n\n@mixin large {\n  @media screen and (min-width: #{$break_point+1px}) {\n    @content;\n  }\n}\n\n@mixin x-large {\n  @media screen and (min-width: #{$confine-width+0px}) {\n    @content;\n  }\n}\n\n@mixin confine-width {\n  @media screen and (min-width: #{$confine-width+1px}) {\n    @content;\n  }\n}\n\n@mixin overlay-max {\n  @media screen and (min-width: #{$overlay-max-width+0px}) {\n    @content;\n  }\n}\n\n// Functional Mixins\n\n@mixin font-sizer($size: $base-font,$size2: $size,$size3: $size2) {\n  font-size: #{($size/$base-font)+rem};\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin font-vw($size: $base-font,$size2: $size,$size3: $size2) {\n  @if ($size2 == $size) {\n    $size: $size * 2;\n  }\n\n  font-size: size-calc($size, 'vw', $break_point);\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin vw-calc($prop, $size: null, $size2: null, $size3: null, $size4: null, $size5: null, $size6: null,  $size7: null, $size8: null) {\n  @if ($prop == padding) or ($prop == margin) {\n    @if $size == null {\n      #{$prop}: 0;\n    } @else if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2});\n        }\n      }\n\n    } @else if ($size2 != null) and ($size3 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2});\n        }\n      }\n\n    } @else if ($size3 != null) and ($size4 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2});\n        }\n      }\n\n    } @else if ($size4 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point) size-calc($size4, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2}) px(#{$size4 * 2});\n        }\n      }\n\n    }\n\n    @if ($size5 != null) and ($size6 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5});\n      }\n    } @else if ($size6 != null) and ($size7 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6});\n      }\n    } @else if ($size7 != null) and ($size8 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7});\n      }\n    } @else if ($size8 != null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width) size-calc($size8, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7}) px(#{$size8});\n      }\n    }\n  } @else {\n    @if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size);\n      }\n    } @else if ($size2 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size2, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size2);\n      }\n    }\n  }\n}\n\n@mixin embed-resize($width: 560,$height: 340,$haspadding: true) {\n  $ratio: ($height / $width);\n  $max-width: size-calc($break_point, 'vw', $break_point);\n\n  @if ($haspadding == true) {\n    $max-width: ($max-width - size-calc(80,'vw',$break_point));\n  }\n\n  @include small {\n    max-width: $max-width;\n    max-height: ($max-width * $ratio);\n  }\n}\n\n@mixin item-count($count) {\n  &:first-child:nth-last-child(#{$count}),\n  &:first-child:nth-last-child(#{$count}) ~ & {\n    @content;\n  }\n}\n\n@mixin calc-it($prop,$first:null,$second:null,$third:null,$forth:null) {\n  @if $first == null {\n    #{$prop}: 0;\n  } @else if ($first != null and $second == null) or ($first != null and $second == $first and $third == null and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == $first ) {\n    #{$prop}: em-calc($first);\n  } @else if ($second != null and $second != $first and $third == null) or ($second != null and $second != $first and $third == $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second);\n  } @else if ($third != null and $third != $first and $forth == null) or ($third != null and $third != $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third);\n  } @else if ($forth != null and $third != $first and $forth != $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third) em-calc($forth);\n  }\n}\n\n@mixin confined {\n  @include confine-width {\n    max-width: px($confine-width);\n    margin: 0 auto;\n    position: relative;\n    @content;\n  }\n}\n\n@mixin widify($first: 1,$second: $first) {\n  width: calc((100% / #{$second}) * #{$first});\n}\n\n@mixin display-switch {\n  &.show {\n    &-large {\n\n      display: none;\n      @include large {\n        display: block;\n      }\n    }\n    &-small {\n      display: block;\n      @include large {\n        display: none;\n      }\n    }\n  }\n}\n\n%nav-height-large-full {\n  @include large {\n    height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-full-min {\n  @include large {\n    min-height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-half {\n  @include large {\n    height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-large-half-min {\n  @include large {\n    min-height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-small-full {\n  @include small {\n    height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      height: calc(100vh);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-full-min {\n  @include small {\n    min-height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      min-height: calc(100vh);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n%nav-height-small-half {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-half-min {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      min-height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n@mixin view-height($screensize, $fullhalf, $min:null) {\n  @if $min != null {\n    $min: -min;\n  }\n  @extend %nav-height-#{$screensize}-#{$fullhalf}#{$min};\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/header/app/scss/includes/_tools.scss","$white: #FFF;\n$off-white: #F6F6F6;\n$gray-1: #E8E8E8;\n$gray-2: #BBBCBC;\n$gray-3: #808285;\n$gray-4: #58595B;\n$black: #000;\n\n$purple: #500778;\n$teal: #008AAB;\n$teal-light: #009dbb;\n$blue-green: #6BCABA;\n$orange: #FFAD00;\n$green: #78D64B;\n$background: #ee7822;\n\n$page-colors: ('teal', $teal, 60%), ('purple', $purple, 60%), ('orange', $orange, 40%);\n\n\n@mixin page-colors() {\n  @each $i in $page-colors {\n    $hex: nth($i,2);\n    $percent: nth($i,3);\n    &.#{nth($i,1)} {\n      // background: lighten($hex, $percent);\n      color: nth($i,2);\n      .st0 {\n        fill: nth($i,2);\n      }\n\n      a {\n        color: nth($i,2);\n      }\n      @content\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/header/app/scss/includes/_colors.scss","@import \"../../includes/includes\";\n\n\n.hero {\n  &__content {\n    width: 100%;\n    background-position: center center;\n    background-repeat: no-repeat;\n    background-size: cover;\n    color: $white;\n    justify-content: flex-end;\n\n  }\n  &__body {\n    width: 50%;\n\n    .title {\n      @include font-sizer(30);\n    }\n    .copy {}\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/hero/app/scss/partials/hero/_hero.scss","$base_item_class: item;\n$base_tile_class: tile;\n$base-font: 16;\n$base-color: #666;\n$break_point: 768;\n$confine-width: ($break_point * 2);\n$overlay-max-width: 1300;\n$break_point-medium: ($break_point * 1.5);\n$break_point-xs: ($break_point * .6);\n$nav-height-large: 120;\n$nav-height-small: 80;\n\n\n// adds px to number string\n@function px($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels + px;\n  }\n}\n\n// figures rem v base font size (default is 16)\n@function rem-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + rem;\n  }\n}\n\n// figures em v base font size (default is 16)\n@function em-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + em;\n  }\n}\n\n// figures %/vw/vh v desired media width\n// usage --  font-size: size-calc(18,'vw',$tablet);\n@function size-calc($pixels, $unit, $container-size) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else if $unit == '%' {\n    @return (($pixels / $container-size) * 100%);\n  } @else if $unit == 'vw' {\n    @return (($pixels / $container-size) * 100vw);\n  } @else if $unit == 'vh' {\n    @return (($pixels / $container-size) * 100vh);\n  }\n}\n\n// Breakpoint and Media Mixins\n\n@mixin x-small {\n  @media screen and (max-width: #{$break_point-xs+0px}) {\n    @content;\n  }\n}\n\n@mixin small {\n  @media screen and (max-width: #{$break_point+0px}) {\n    @content;\n  }\n}\n\n@mixin landscape {\n  @media screen and (max-width: #{$break_point+0px}) and (orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin medium {\n  @media screen and (min-width: #{$break_point+1px}) and (max-width: #{$break_point-medium+0px}) {\n    @content;\n  }\n}\n\n@mixin large {\n  @media screen and (min-width: #{$break_point+1px}) {\n    @content;\n  }\n}\n\n@mixin x-large {\n  @media screen and (min-width: #{$confine-width+0px}) {\n    @content;\n  }\n}\n\n@mixin confine-width {\n  @media screen and (min-width: #{$confine-width+1px}) {\n    @content;\n  }\n}\n\n@mixin overlay-max {\n  @media screen and (min-width: #{$overlay-max-width+0px}) {\n    @content;\n  }\n}\n\n// Functional Mixins\n\n@mixin font-sizer($size: $base-font,$size2: $size,$size3: $size2) {\n  font-size: #{($size/$base-font)+rem};\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin font-vw($size: $base-font,$size2: $size,$size3: $size2) {\n  @if ($size2 == $size) {\n    $size: $size * 2;\n  }\n\n  font-size: size-calc($size, 'vw', $break_point);\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin vw-calc($prop, $size: null, $size2: null, $size3: null, $size4: null, $size5: null, $size6: null,  $size7: null, $size8: null) {\n  @if ($prop == padding) or ($prop == margin) {\n    @if $size == null {\n      #{$prop}: 0;\n    } @else if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2});\n        }\n      }\n\n    } @else if ($size2 != null) and ($size3 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2});\n        }\n      }\n\n    } @else if ($size3 != null) and ($size4 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2});\n        }\n      }\n\n    } @else if ($size4 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point) size-calc($size4, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2}) px(#{$size4 * 2});\n        }\n      }\n\n    }\n\n    @if ($size5 != null) and ($size6 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5});\n      }\n    } @else if ($size6 != null) and ($size7 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6});\n      }\n    } @else if ($size7 != null) and ($size8 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7});\n      }\n    } @else if ($size8 != null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width) size-calc($size8, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7}) px(#{$size8});\n      }\n    }\n  } @else {\n    @if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size);\n      }\n    } @else if ($size2 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size2, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size2);\n      }\n    }\n  }\n}\n\n@mixin embed-resize($width: 560,$height: 340,$haspadding: true) {\n  $ratio: ($height / $width);\n  $max-width: size-calc($break_point, 'vw', $break_point);\n\n  @if ($haspadding == true) {\n    $max-width: ($max-width - size-calc(80,'vw',$break_point));\n  }\n\n  @include small {\n    max-width: $max-width;\n    max-height: ($max-width * $ratio);\n  }\n}\n\n@mixin item-count($count) {\n  &:first-child:nth-last-child(#{$count}),\n  &:first-child:nth-last-child(#{$count}) ~ & {\n    @content;\n  }\n}\n\n@mixin calc-it($prop,$first:null,$second:null,$third:null,$forth:null) {\n  @if $first == null {\n    #{$prop}: 0;\n  } @else if ($first != null and $second == null) or ($first != null and $second == $first and $third == null and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == $first ) {\n    #{$prop}: em-calc($first);\n  } @else if ($second != null and $second != $first and $third == null) or ($second != null and $second != $first and $third == $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second);\n  } @else if ($third != null and $third != $first and $forth == null) or ($third != null and $third != $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third);\n  } @else if ($forth != null and $third != $first and $forth != $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third) em-calc($forth);\n  }\n}\n\n@mixin confined {\n  @include confine-width {\n    max-width: px($confine-width);\n    margin: 0 auto;\n    position: relative;\n    @content;\n  }\n}\n\n@mixin widify($first: 1,$second: $first) {\n  width: calc((100% / #{$second}) * #{$first});\n}\n\n@mixin display-switch {\n  &.show {\n    &-large {\n\n      display: none;\n      @include large {\n        display: block;\n      }\n    }\n    &-small {\n      display: block;\n      @include large {\n        display: none;\n      }\n    }\n  }\n}\n\n%nav-height-large-full {\n  @include large {\n    height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-full-min {\n  @include large {\n    min-height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-half {\n  @include large {\n    height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-large-half-min {\n  @include large {\n    min-height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-small-full {\n  @include small {\n    height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      height: calc(100vh);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-full-min {\n  @include small {\n    min-height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      min-height: calc(100vh);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n%nav-height-small-half {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-half-min {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      min-height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n@mixin view-height($screensize, $fullhalf, $min:null) {\n  @if $min != null {\n    $min: -min;\n  }\n  @extend %nav-height-#{$screensize}-#{$fullhalf}#{$min};\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/hero/app/scss/includes/_tools.scss","@import \"../../includes/includes\";\n\nbody {\n\n}\n\na {\n  text-decoration: none;\n}\n\nh1 {\n  font-weight: 700;\n  font-size: 4em;\n}\n\nh2, h3 {\n  margin-top: 0;\n}\n\np {\n  margin: 0;\n}\n\n.bold {\n  font-weight: 700;\n}\n\n\n\n.icons {\n  float: right;\n  text-transform: uppercase;\n  font-weight: 700;\n  letter-spacing: 1px;\n  font-size: .8em;\n  text-align: center;\n}\n\n.download {\n  text-transform: uppercase;\n  font-weight: 700;\n  letter-spacing: 1px;\n  font-size: .8em;\n  text-align: center;\n}\n\n.icons {\n  .material-icons {\n    font-size: 36px;\n  }\n  div {\n    display: inline-block;\n    margin: 0 10px;\n  }\n}\n\n.title {\n  margin: 10px 0;\n  font-size: 1.2em;\n  .material-icons {\n    position: relative;\n    top: 3px;\n    font-size: 1em;\n    margin-right: 5px;\n  }\n}\n\n.div-shadow {\n  box-shadow: #999 2px 2px 5px;\n  padding: 30px;\n  margin: 15px 0;\n  &.img {\n    padding: 0;\n    img {\n      width: 100%;\n    }\n  }\n  &.white {\n    background: #fff;\n  }\n}\n\nul {\n  padding: 0;\n  li {\n    list-style: none;\n  }\n}\n\nol {\n  padding: 0 15px;\n}\n\nli {\n  margin: 10px 0;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/page/app/scss/partials/page/_page.scss","@import \"../../includes/includes\";\n\n#footer {\n  color: $white;\n  align-items: stretch;\n  justify-content: space-between;\n  flex-direction: column;\n  background-color: $teal;\n  @include large {\n    flex-direction: row;\n  }\n\n  a {\n    color: $white;\n  }\n}\n\n.footer {\n  &__menu {\n    justify-content: space-between;\n    background-color: $teal-light;\n    @include vw-calc(padding, 20);\n    @include large {\n      width: 80%;\n    }\n    &-title {\n      @include font-sizer(18,24);\n    }\n    &-item {\n      a {\n        @include vw-calc(padding, 5, 0);\n        @include vw-calc(margin, 0);\n      }\n    }\n  }\n  &__copyright {\n    @include vw-calc(padding, 20);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/footer/app/scss/partials/footer/_footer.scss","$white: #FFF;\n$off-white: #F6F6F6;\n$gray-1: #E8E8E8;\n$gray-2: #BBBCBC;\n$gray-3: #808285;\n$gray-4: #58595B;\n$black: #000;\n\n$purple: #500778;\n$teal: #008AAB;\n$teal-light: #009dbb;\n$blue-green: #6BCABA;\n$orange: #FFAD00;\n$green: #78D64B;\n$background: #ee7822;\n\n$page-colors: ('teal', $teal, 60%), ('purple', $purple, 60%), ('orange', $orange, 40%);\n\n\n@mixin page-colors() {\n  @each $i in $page-colors {\n    $hex: nth($i,2);\n    $percent: nth($i,3);\n    &.#{nth($i,1)} {\n      // background: lighten($hex, $percent);\n      color: nth($i,2);\n      .st0 {\n        fill: nth($i,2);\n      }\n\n      a {\n        color: nth($i,2);\n      }\n      @content\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/footer/app/scss/includes/_colors.scss","$base_item_class: item;\n$base_tile_class: tile;\n$base-font: 16;\n$base-color: #666;\n$break_point: 768;\n$confine-width: ($break_point * 2);\n$overlay-max-width: 1300;\n$break_point-medium: ($break_point * 1.5);\n$break_point-xs: ($break_point * .6);\n$nav-height-large: 120;\n$nav-height-small: 80;\n\n\n// adds px to number string\n@function px($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels + px;\n  }\n}\n\n// figures rem v base font size (default is 16)\n@function rem-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + rem;\n  }\n}\n\n// figures em v base font size (default is 16)\n@function em-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + em;\n  }\n}\n\n// figures %/vw/vh v desired media width\n// usage --  font-size: size-calc(18,'vw',$tablet);\n@function size-calc($pixels, $unit, $container-size) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else if $unit == '%' {\n    @return (($pixels / $container-size) * 100%);\n  } @else if $unit == 'vw' {\n    @return (($pixels / $container-size) * 100vw);\n  } @else if $unit == 'vh' {\n    @return (($pixels / $container-size) * 100vh);\n  }\n}\n\n// Breakpoint and Media Mixins\n\n@mixin x-small {\n  @media screen and (max-width: #{$break_point-xs+0px}) {\n    @content;\n  }\n}\n\n@mixin small {\n  @media screen and (max-width: #{$break_point+0px}) {\n    @content;\n  }\n}\n\n@mixin landscape {\n  @media screen and (max-width: #{$break_point+0px}) and (orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin medium {\n  @media screen and (min-width: #{$break_point+1px}) and (max-width: #{$break_point-medium+0px}) {\n    @content;\n  }\n}\n\n@mixin large {\n  @media screen and (min-width: #{$break_point+1px}) {\n    @content;\n  }\n}\n\n@mixin x-large {\n  @media screen and (min-width: #{$confine-width+0px}) {\n    @content;\n  }\n}\n\n@mixin confine-width {\n  @media screen and (min-width: #{$confine-width+1px}) {\n    @content;\n  }\n}\n\n@mixin overlay-max {\n  @media screen and (min-width: #{$overlay-max-width+0px}) {\n    @content;\n  }\n}\n\n// Functional Mixins\n\n@mixin font-sizer($size: $base-font,$size2: $size,$size3: $size2) {\n  font-size: #{($size/$base-font)+rem};\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin font-vw($size: $base-font,$size2: $size,$size3: $size2) {\n  @if ($size2 == $size) {\n    $size: $size * 2;\n  }\n\n  font-size: size-calc($size, 'vw', $break_point);\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin vw-calc($prop, $size: null, $size2: null, $size3: null, $size4: null, $size5: null, $size6: null,  $size7: null, $size8: null) {\n  @if ($prop == padding) or ($prop == margin) {\n    @if $size == null {\n      #{$prop}: 0;\n    } @else if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2});\n        }\n      }\n\n    } @else if ($size2 != null) and ($size3 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2});\n        }\n      }\n\n    } @else if ($size3 != null) and ($size4 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2});\n        }\n      }\n\n    } @else if ($size4 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point) size-calc($size4, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2}) px(#{$size4 * 2});\n        }\n      }\n\n    }\n\n    @if ($size5 != null) and ($size6 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5});\n      }\n    } @else if ($size6 != null) and ($size7 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6});\n      }\n    } @else if ($size7 != null) and ($size8 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7});\n      }\n    } @else if ($size8 != null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width) size-calc($size8, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7}) px(#{$size8});\n      }\n    }\n  } @else {\n    @if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size);\n      }\n    } @else if ($size2 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size2, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size2);\n      }\n    }\n  }\n}\n\n@mixin embed-resize($width: 560,$height: 340,$haspadding: true) {\n  $ratio: ($height / $width);\n  $max-width: size-calc($break_point, 'vw', $break_point);\n\n  @if ($haspadding == true) {\n    $max-width: ($max-width - size-calc(80,'vw',$break_point));\n  }\n\n  @include small {\n    max-width: $max-width;\n    max-height: ($max-width * $ratio);\n  }\n}\n\n@mixin item-count($count) {\n  &:first-child:nth-last-child(#{$count}),\n  &:first-child:nth-last-child(#{$count}) ~ & {\n    @content;\n  }\n}\n\n@mixin calc-it($prop,$first:null,$second:null,$third:null,$forth:null) {\n  @if $first == null {\n    #{$prop}: 0;\n  } @else if ($first != null and $second == null) or ($first != null and $second == $first and $third == null and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == $first ) {\n    #{$prop}: em-calc($first);\n  } @else if ($second != null and $second != $first and $third == null) or ($second != null and $second != $first and $third == $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second);\n  } @else if ($third != null and $third != $first and $forth == null) or ($third != null and $third != $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third);\n  } @else if ($forth != null and $third != $first and $forth != $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third) em-calc($forth);\n  }\n}\n\n@mixin confined {\n  @include confine-width {\n    max-width: px($confine-width);\n    margin: 0 auto;\n    position: relative;\n    @content;\n  }\n}\n\n@mixin widify($first: 1,$second: $first) {\n  width: calc((100% / #{$second}) * #{$first});\n}\n\n@mixin display-switch {\n  &.show {\n    &-large {\n\n      display: none;\n      @include large {\n        display: block;\n      }\n    }\n    &-small {\n      display: block;\n      @include large {\n        display: none;\n      }\n    }\n  }\n}\n\n%nav-height-large-full {\n  @include large {\n    height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-full-min {\n  @include large {\n    min-height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-half {\n  @include large {\n    height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-large-half-min {\n  @include large {\n    min-height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-small-full {\n  @include small {\n    height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      height: calc(100vh);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-full-min {\n  @include small {\n    min-height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      min-height: calc(100vh);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n%nav-height-small-half {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-half-min {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      min-height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n@mixin view-height($screensize, $fullhalf, $min:null) {\n  @if $min != null {\n    $min: -min;\n  }\n  @extend %nav-height-#{$screensize}-#{$fullhalf}#{$min};\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/footer/app/scss/includes/_tools.scss","@import \"../../../includes/includes\";\n.btn {\n  text-transform: uppercase;\n  border: none;\n  border-radius: 0;\n  width: 100%;\n  outline: none;\n\n  p {\n    font-weight: 700;\n    letter-spacing: .5px;\n    &:hover {\n      color: inherit;\n    }\n  }\n  &.play {\n    background: transparent url('../../../../img/play.png') no-repeat center center;\n    background-size: cover;\n    @include vw-calc(width, 30);\n    @include vw-calc(height, 30);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/components/button/app/scss/partials/components/button/_button.scss","$base_item_class: item;\n$base_tile_class: tile;\n$base-font: 16;\n$base-color: #666;\n$break_point: 768;\n$confine-width: ($break_point * 2);\n$overlay-max-width: 1300;\n$break_point-medium: ($break_point * 1.5);\n$break_point-xs: ($break_point * .6);\n$nav-height-large: 120;\n$nav-height-small: 80;\n\n\n// adds px to number string\n@function px($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels + px;\n  }\n}\n\n// figures rem v base font size (default is 16)\n@function rem-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + rem;\n  }\n}\n\n// figures em v base font size (default is 16)\n@function em-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + em;\n  }\n}\n\n// figures %/vw/vh v desired media width\n// usage --  font-size: size-calc(18,'vw',$tablet);\n@function size-calc($pixels, $unit, $container-size) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else if $unit == '%' {\n    @return (($pixels / $container-size) * 100%);\n  } @else if $unit == 'vw' {\n    @return (($pixels / $container-size) * 100vw);\n  } @else if $unit == 'vh' {\n    @return (($pixels / $container-size) * 100vh);\n  }\n}\n\n// Breakpoint and Media Mixins\n\n@mixin x-small {\n  @media screen and (max-width: #{$break_point-xs+0px}) {\n    @content;\n  }\n}\n\n@mixin small {\n  @media screen and (max-width: #{$break_point+0px}) {\n    @content;\n  }\n}\n\n@mixin landscape {\n  @media screen and (max-width: #{$break_point+0px}) and (orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin medium {\n  @media screen and (min-width: #{$break_point+1px}) and (max-width: #{$break_point-medium+0px}) {\n    @content;\n  }\n}\n\n@mixin large {\n  @media screen and (min-width: #{$break_point+1px}) {\n    @content;\n  }\n}\n\n@mixin x-large {\n  @media screen and (min-width: #{$confine-width+0px}) {\n    @content;\n  }\n}\n\n@mixin confine-width {\n  @media screen and (min-width: #{$confine-width+1px}) {\n    @content;\n  }\n}\n\n@mixin overlay-max {\n  @media screen and (min-width: #{$overlay-max-width+0px}) {\n    @content;\n  }\n}\n\n// Functional Mixins\n\n@mixin font-sizer($size: $base-font,$size2: $size,$size3: $size2) {\n  font-size: #{($size/$base-font)+rem};\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin font-vw($size: $base-font,$size2: $size,$size3: $size2) {\n  @if ($size2 == $size) {\n    $size: $size * 2;\n  }\n\n  font-size: size-calc($size, 'vw', $break_point);\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin vw-calc($prop, $size: null, $size2: null, $size3: null, $size4: null, $size5: null, $size6: null,  $size7: null, $size8: null) {\n  @if ($prop == padding) or ($prop == margin) {\n    @if $size == null {\n      #{$prop}: 0;\n    } @else if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2});\n        }\n      }\n\n    } @else if ($size2 != null) and ($size3 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2});\n        }\n      }\n\n    } @else if ($size3 != null) and ($size4 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2});\n        }\n      }\n\n    } @else if ($size4 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point) size-calc($size4, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2}) px(#{$size4 * 2});\n        }\n      }\n\n    }\n\n    @if ($size5 != null) and ($size6 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5});\n      }\n    } @else if ($size6 != null) and ($size7 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6});\n      }\n    } @else if ($size7 != null) and ($size8 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7});\n      }\n    } @else if ($size8 != null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width) size-calc($size8, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7}) px(#{$size8});\n      }\n    }\n  } @else {\n    @if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size);\n      }\n    } @else if ($size2 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size2, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size2);\n      }\n    }\n  }\n}\n\n@mixin embed-resize($width: 560,$height: 340,$haspadding: true) {\n  $ratio: ($height / $width);\n  $max-width: size-calc($break_point, 'vw', $break_point);\n\n  @if ($haspadding == true) {\n    $max-width: ($max-width - size-calc(80,'vw',$break_point));\n  }\n\n  @include small {\n    max-width: $max-width;\n    max-height: ($max-width * $ratio);\n  }\n}\n\n@mixin item-count($count) {\n  &:first-child:nth-last-child(#{$count}),\n  &:first-child:nth-last-child(#{$count}) ~ & {\n    @content;\n  }\n}\n\n@mixin calc-it($prop,$first:null,$second:null,$third:null,$forth:null) {\n  @if $first == null {\n    #{$prop}: 0;\n  } @else if ($first != null and $second == null) or ($first != null and $second == $first and $third == null and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == $first ) {\n    #{$prop}: em-calc($first);\n  } @else if ($second != null and $second != $first and $third == null) or ($second != null and $second != $first and $third == $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second);\n  } @else if ($third != null and $third != $first and $forth == null) or ($third != null and $third != $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third);\n  } @else if ($forth != null and $third != $first and $forth != $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third) em-calc($forth);\n  }\n}\n\n@mixin confined {\n  @include confine-width {\n    max-width: px($confine-width);\n    margin: 0 auto;\n    position: relative;\n    @content;\n  }\n}\n\n@mixin widify($first: 1,$second: $first) {\n  width: calc((100% / #{$second}) * #{$first});\n}\n\n@mixin display-switch {\n  &.show {\n    &-large {\n\n      display: none;\n      @include large {\n        display: block;\n      }\n    }\n    &-small {\n      display: block;\n      @include large {\n        display: none;\n      }\n    }\n  }\n}\n\n%nav-height-large-full {\n  @include large {\n    height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-full-min {\n  @include large {\n    min-height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-half {\n  @include large {\n    height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-large-half-min {\n  @include large {\n    min-height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-small-full {\n  @include small {\n    height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      height: calc(100vh);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-full-min {\n  @include small {\n    min-height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      min-height: calc(100vh);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n%nav-height-small-half {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-half-min {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      min-height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n@mixin view-height($screensize, $fullhalf, $min:null) {\n  @if $min != null {\n    $min: -min;\n  }\n  @extend %nav-height-#{$screensize}-#{$fullhalf}#{$min};\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/components/button/app/scss/includes/_tools.scss","@import \"../../../includes/includes\";\n\n.pod {\n  &__container {\n    display: flex;\n  }\n  &__column {}\n\n  .image {\n    img {\n      max-width: 100%;\n    }\n    i {\n      font-size: 60px;\n    }\n  }\n  .title {\n    @include font-sizer(30);\n    line-height: 30px;\n    margin-bottom: 10px;\n  }\n  .copy {}\n  .source {\n    font-size: 10px;\n  }\n\n  .link {\n    padding-top: 15px;\n\n  }\n  &3 {\n\n  }\n\n  &2 {\n    border-top: solid 1px $gray-2;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/components/pod/app/scss/partials/components/pod/_pod.scss","$base_item_class: item;\n$base_tile_class: tile;\n$base-font: 16;\n$base-color: #666;\n$break_point: 768;\n$confine-width: ($break_point * 2);\n$overlay-max-width: 1300;\n$break_point-medium: ($break_point * 1.5);\n$break_point-xs: ($break_point * .6);\n$nav-height-large: 120;\n$nav-height-small: 80;\n\n\n// adds px to number string\n@function px($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels + px;\n  }\n}\n\n// figures rem v base font size (default is 16)\n@function rem-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + rem;\n  }\n}\n\n// figures em v base font size (default is 16)\n@function em-calc($pixels) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else {\n    @return $pixels / $base-font + em;\n  }\n}\n\n// figures %/vw/vh v desired media width\n// usage --  font-size: size-calc(18,'vw',$tablet);\n@function size-calc($pixels, $unit, $container-size) {\n  @if ($pixels == 0) {\n    @return $pixels;\n  } @else if $unit == '%' {\n    @return (($pixels / $container-size) * 100%);\n  } @else if $unit == 'vw' {\n    @return (($pixels / $container-size) * 100vw);\n  } @else if $unit == 'vh' {\n    @return (($pixels / $container-size) * 100vh);\n  }\n}\n\n// Breakpoint and Media Mixins\n\n@mixin x-small {\n  @media screen and (max-width: #{$break_point-xs+0px}) {\n    @content;\n  }\n}\n\n@mixin small {\n  @media screen and (max-width: #{$break_point+0px}) {\n    @content;\n  }\n}\n\n@mixin landscape {\n  @media screen and (max-width: #{$break_point+0px}) and (orientation: landscape) {\n    @content;\n  }\n}\n\n@mixin medium {\n  @media screen and (min-width: #{$break_point+1px}) and (max-width: #{$break_point-medium+0px}) {\n    @content;\n  }\n}\n\n@mixin large {\n  @media screen and (min-width: #{$break_point+1px}) {\n    @content;\n  }\n}\n\n@mixin x-large {\n  @media screen and (min-width: #{$confine-width+0px}) {\n    @content;\n  }\n}\n\n@mixin confine-width {\n  @media screen and (min-width: #{$confine-width+1px}) {\n    @content;\n  }\n}\n\n@mixin overlay-max {\n  @media screen and (min-width: #{$overlay-max-width+0px}) {\n    @content;\n  }\n}\n\n// Functional Mixins\n\n@mixin font-sizer($size: $base-font,$size2: $size,$size3: $size2) {\n  font-size: #{($size/$base-font)+rem};\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin font-vw($size: $base-font,$size2: $size,$size3: $size2) {\n  @if ($size2 == $size) {\n    $size: $size * 2;\n  }\n\n  font-size: size-calc($size, 'vw', $break_point);\n  @include large {\n    font-size: size-calc($size2, 'vw', $confine-width);\n  }\n  @include confine-width {\n    font-size: #{($size3/$base-font)+rem};\n  }\n}\n\n@mixin vw-calc($prop, $size: null, $size2: null, $size3: null, $size4: null, $size5: null, $size6: null,  $size7: null, $size8: null) {\n  @if ($prop == padding) or ($prop == margin) {\n    @if $size == null {\n      #{$prop}: 0;\n    } @else if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2});\n        }\n      }\n\n    } @else if ($size2 != null) and ($size3 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2});\n        }\n      }\n\n    } @else if ($size3 != null) and ($size4 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2});\n        }\n      }\n\n    } @else if ($size4 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point) size-calc($size2, 'vw', $break_point) size-calc($size3, 'vw', $break_point) size-calc($size4, 'vw', $break_point);\n\n      @if ($size5 == null) {\n        @include confine-width {\n          #{$prop}: px(#{$size * 2}) px(#{$size2 * 2}) px(#{$size3 * 2}) px(#{$size4 * 2});\n        }\n      }\n\n    }\n\n    @if ($size5 != null) and ($size6 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5});\n      }\n    } @else if ($size6 != null) and ($size7 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6});\n      }\n    } @else if ($size7 != null) and ($size8 == null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7});\n      }\n    } @else if ($size8 != null) {\n      @include large {\n        #{$prop}: size-calc($size5, 'vw', $confine-width) size-calc($size6, 'vw', $confine-width) size-calc($size7, 'vw', $confine-width) size-calc($size8, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px(#{$size5}) px(#{$size6}) px(#{$size7}) px(#{$size8});\n      }\n    }\n  } @else {\n    @if ($size != null) and ($size2 == null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size);\n      }\n    } @else if ($size2 != null) {\n      #{$prop}: size-calc($size, 'vw', $break_point);\n      @include large {\n        #{$prop}: size-calc($size2, 'vw', $confine-width);\n      }\n      @include confine-width {\n        #{$prop}: px($size2);\n      }\n    }\n  }\n}\n\n@mixin embed-resize($width: 560,$height: 340,$haspadding: true) {\n  $ratio: ($height / $width);\n  $max-width: size-calc($break_point, 'vw', $break_point);\n\n  @if ($haspadding == true) {\n    $max-width: ($max-width - size-calc(80,'vw',$break_point));\n  }\n\n  @include small {\n    max-width: $max-width;\n    max-height: ($max-width * $ratio);\n  }\n}\n\n@mixin item-count($count) {\n  &:first-child:nth-last-child(#{$count}),\n  &:first-child:nth-last-child(#{$count}) ~ & {\n    @content;\n  }\n}\n\n@mixin calc-it($prop,$first:null,$second:null,$third:null,$forth:null) {\n  @if $first == null {\n    #{$prop}: 0;\n  } @else if ($first != null and $second == null) or ($first != null and $second == $first and $third == null and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == null) or ($first != null and $second == $first and $third == $first and $forth == $first ) {\n    #{$prop}: em-calc($first);\n  } @else if ($second != null and $second != $first and $third == null) or ($second != null and $second != $first and $third == $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second);\n  } @else if ($third != null and $third != $first and $forth == null) or ($third != null and $third != $first and $forth == $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third);\n  } @else if ($forth != null and $third != $first and $forth != $second) {\n    #{$prop}: em-calc($first) em-calc($second) em-calc($third) em-calc($forth);\n  }\n}\n\n@mixin confined {\n  @include confine-width {\n    max-width: px($confine-width);\n    margin: 0 auto;\n    position: relative;\n    @content;\n  }\n}\n\n@mixin widify($first: 1,$second: $first) {\n  width: calc((100% / #{$second}) * #{$first});\n}\n\n@mixin display-switch {\n  &.show {\n    &-large {\n\n      display: none;\n      @include large {\n        display: block;\n      }\n    }\n    &-small {\n      display: block;\n      @include large {\n        display: none;\n      }\n    }\n  }\n}\n\n%nav-height-large-full {\n  @include large {\n    height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-full-min {\n  @include large {\n    min-height: calc(100vh - #{px($nav-height-large)});\n  }\n}\n\n%nav-height-large-half {\n  @include large {\n    height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-large-half-min {\n  @include large {\n    min-height: #{(100vh - #{px($nav-height-large)}) / 2};\n  }\n}\n\n%nav-height-small-full {\n  @include small {\n    height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      height: calc(100vh);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-full-min {\n  @include small {\n    min-height: calc(100vh - #{px($nav-height-small)});\n    &.tile__hero {\n      min-height: calc(100vh);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n%nav-height-small-half {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    height: unset;\n  }\n}\n\n%nav-height-small-half-min {\n  @include small {\n    min-height: calc((100vh - #{px($nav-height-small)}) / 2);\n    &.tile__hero {\n      min-height: calc(100vh / 2);\n    }\n  }\n  @include landscape {\n    min-height: unset;\n  }\n}\n\n@mixin view-height($screensize, $fullhalf, $min:null) {\n  @if $min != null {\n    $min: -min;\n  }\n  @extend %nav-height-#{$screensize}-#{$fullhalf}#{$min};\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/components/pod/app/scss/includes/_tools.scss","$white: #FFF;\n$off-white: #F6F6F6;\n$gray-1: #E8E8E8;\n$gray-2: #BBBCBC;\n$gray-3: #808285;\n$gray-4: #58595B;\n$black: #000;\n\n$purple: #500778;\n$teal: #008AAB;\n$teal-light: #009dbb;\n$blue-green: #6BCABA;\n$orange: #FFAD00;\n$green: #78D64B;\n$background: #ee7822;\n\n$page-colors: ('teal', $teal, 60%), ('purple', $purple, 60%), ('orange', $orange, 40%);\n\n\n@mixin page-colors() {\n  @each $i in $page-colors {\n    $hex: nth($i,2);\n    $percent: nth($i,3);\n    &.#{nth($i,1)} {\n      // background: lighten($hex, $percent);\n      color: nth($i,2);\n      .st0 {\n        fill: nth($i,2);\n      }\n\n      a {\n        color: nth($i,2);\n      }\n      @content\n    }\n  }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/components/pod/app/scss/includes/_colors.scss","a {\n  &.cta {\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    text-decoration: none;\n    color: inherit;\n\n    .text {\n      text-transform: uppercase;\n    }\n\n    i {\n      font-size: inherit;\n      padding-left: 10px;\n    }\n\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/scss/partials/components/cta/app/scss/partials/components/cta/_cta.scss"],"sourceRoot":""}